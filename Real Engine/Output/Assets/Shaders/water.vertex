#version 330 core

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform float time;
uniform float amplitude = 1.0;
uniform float wave_length = 2.0;

uniform vec3 waterColor = vec3(0.0,0.38,1.0);
uniform vec3 foamColor = vec3(0.66,1,1.0);


layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;
layout (location = 3) in vec4 aColor;

out vec2 TexCoords;
out vec4 Color;

vec3 displace(vec3 position, float time)
{
    vec3 newPos = aPos;
	float k = 2 * 3.14 / wave_length;
	newPos.z = amplitude * sin(k * newPos.x + time);
	return newPos;
}


void main()
{
    TexCoords   = aTexCoords; 
	
	vec3 p = displace(aPos,time);

	float mix_value = (p.z - 0) / (1 - 0);
	
	vec3 mixedColor = mix(waterColor.rgb, foamColor, mix_value);
    Color	= vec4(mixedColor,1.0);
	
	
	
    gl_Position = projection * view * model * vec4(p, 1.0);
}